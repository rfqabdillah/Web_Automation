{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-26T18:13:20.671Z",
    "end": "2025-06-26T18:13:21.911Z",
    "duration": 1240,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 4,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "1c75c83d-9676-4fe0-8835-4807c6f4f01f",
      "title": "",
      "fullFile": "C:\\Users\\ACER\\Web_Automation\\tests\\test-sauce.js",
      "file": "\\tests\\test-sauce.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ee5d3964-5f8f-4c5d-af6e-a4933bdf2654",
          "title": "SauceDemo Automation Test",
          "fullFile": "C:\\Users\\ACER\\Web_Automation\\tests\\test-sauce.js",
          "file": "\\tests\\test-sauce.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"Valid Login\"",
              "fullTitle": "SauceDemo Automation Test \"before all\" hook for \"Valid Login\"",
              "timedOut": false,
              "duration": 1231,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('firefox').build();",
              "err": {
                "message": "WebDriverError: Process unexpectedly closed with status 0",
                "estack": "WebDriverError: Process unexpectedly closed with status 0\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:523:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:524:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:456:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "46ea209e-5348-46b3-8fbf-018819ae0832",
              "parentUUID": "ee5d3964-5f8f-4c5d-af6e-a4933bdf2654",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "SauceDemo Automation Test \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Selalu buka halaman login sebelum setiap mulai test\nawait driver.get('https://www.saucedemo.com');",
              "err": {},
              "uuid": "9c6a060e-e8cb-4f08-bae2-21c5fe46046c",
              "parentUUID": "ee5d3964-5f8f-4c5d-af6e-a4933bdf2654",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook for \"Successful Logout\"",
              "fullTitle": "SauceDemo Automation Test \"after all\" hook for \"Successful Logout\"",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'quit')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'quit')\n    at Context.<anonymous> (tests\\test-sauce.js:14:18)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "ea86618e-504e-4af3-b8ab-78a839818320",
              "parentUUID": "ee5d3964-5f8f-4c5d-af6e-a4933bdf2654",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "SauceDemo Automation Test \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const menuButton = await driver.findElement(By.id('react-burger-menu-btn'));\n  await menuButton.click();\n  await driver.wait(until.elementLocated(By.id('logout_sidebar_link')), 10000);\n  const logoutLink = await driver.findElement(By.id('logout_sidebar_link'));\n  await logoutLink.click();\n  await driver.wait(until.elementLocated(By.css('[data-test=\"login-button\"]')), 10000);\n} catch (err) {\n  // kalau tidak bisa logout (misalnya karena gagal login)\n}",
              "err": {},
              "uuid": "877d3753-84d3-4f83-99fa-cd21e336e890",
              "parentUUID": "ee5d3964-5f8f-4c5d-af6e-a4933bdf2654",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Valid Login",
              "fullTitle": "SauceDemo Automation Test Valid Login",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginToSauceDemo();\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, 'https://www.saucedemo.com/inventory.html', 'URL after login does not match');",
              "err": {},
              "uuid": "e205e65f-8c16-4659-85cd-84ae09df5e6a",
              "parentUUID": "ee5d3964-5f8f-4c5d-af6e-a4933bdf2654",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Sort Products from A to Z",
              "fullTitle": "SauceDemo Automation Test Sort Products from A to Z",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginToSauceDemo();\nconst sortDropdown = await driver.findElement(By.css('[data-test=\"product-sort-container\"]'));\nawait sortDropdown.findElement(By.css('option[value=\"az\"]')).click();\nawait driver.sleep(2000);\nconst productNameElements = await driver.findElements(By.className('inventory_item_name'));\nconst productNames = [];\nfor (let el of productNameElements) {\n  productNames.push(await el.getText());\n}\nconst sortedNames = [...productNames].sort((a, b) => a.localeCompare(b));\nassert.deepStrictEqual(productNames, sortedNames, 'Products are not sorted from A to Z');",
              "err": {},
              "uuid": "2517e44a-9aa0-45ea-9df0-e23970380e37",
              "parentUUID": "ee5d3964-5f8f-4c5d-af6e-a4933bdf2654",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Sort Products From Low to High",
              "fullTitle": "SauceDemo Automation Test Sort Products From Low to High",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginToSauceDemo();\nconst sortDropdown = await driver.findElement(By.css('[data-test=\"product-sort-container\"]'));\nawait sortDropdown.findElement(By.css('option[value=\"lohi\"]')).click();\nawait driver.sleep(2000);\nconst priceElements = await driver.findElements(By.className('inventory_item_price'));\nconst prices = [];\nfor (let el of priceElements) {\n  const text = await el.getText();\n  prices.push(parseFloat(text.replace('$', '')));\n}\nconst sortedPrices = [...prices].sort((a, b) => a - b);\nassert.deepStrictEqual(prices, sortedPrices, 'Product prices are not sorted from lowest to highest');",
              "err": {},
              "uuid": "fcb76942-5906-4b1f-951c-fb8edc7af004",
              "parentUUID": "ee5d3964-5f8f-4c5d-af6e-a4933bdf2654",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Successful Logout",
              "fullTitle": "SauceDemo Automation Test Successful Logout",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginToSauceDemo();\nconst menuButton = await driver.findElement(By.id('react-burger-menu-btn'));\nawait menuButton.click();\nawait driver.wait(until.elementLocated(By.id('logout_sidebar_link')), 10000);\nconst logoutLink = await driver.findElement(By.id('logout_sidebar_link'));\nawait logoutLink.click();\nawait driver.wait(until.elementLocated(By.css('[data-test=\"login-button\"]')), 10000);\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, 'https://www.saucedemo.com/', 'Failed to logout');",
              "err": {},
              "uuid": "342fa928-ecdb-4a5a-b047-96d565f40c07",
              "parentUUID": "ee5d3964-5f8f-4c5d-af6e-a4933bdf2654",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "e205e65f-8c16-4659-85cd-84ae09df5e6a",
            "2517e44a-9aa0-45ea-9df0-e23970380e37",
            "fcb76942-5906-4b1f-951c-fb8edc7af004",
            "342fa928-ecdb-4a5a-b047-96d565f40c07"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}